{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/code.ts","webpack:///./src/common/convertColor.js","webpack:///./src/common/events.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAA2C;AACc;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,KAAK;AAC9C,wCAAwC,KAAK;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,0BAA0B;AACrC;AACA;AACA;AACA,qBAAqB,6EAAgB;AACrC;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAiC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,cAAc;AAC5C;AACA;AACA,4BAA4B,sBAAsB,KAAK,UAAU;AACjE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gBAAgB,qBAAqB,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA,wBAAwB,0BAA0B;AAClD,2DAAI;AACJ;AACA,IAAI,2DAAI;AACR,IAAI,2DAAI;AACR,CAAC;AACD,yDAAE;AACF;AACA,CAAC;AACD,yDAAE;AACF;AACA,CAAC;AACD,yDAAE;AACF;AACA,CAAC;AACD,yDAAE;AACF;AACA,CAAC;AACD,yDAAE;AACF;AACA,IAAI,2DAAI;AACR;AACA,CAAC;AACD,yDAAE;AACF;AACA,CAAC;AACD,yDAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,yDAAE;AACF;AACA,CAAC;AACD,yDAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;AACD,yDAAE;AACF;AACA,QAAQ,2DAAI;AACZ,KAAK;AACL,CAAC;;;;;;;;;;;;;AC/MD;AAAA;AAAA;AAAA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,oCAAoC,EAAE,IAAI,EAAE;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,C;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AACA;AACO;AACP,kBAAkB,UAAU;AAC5B;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C","file":"code.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/code.ts\");\n","import { on, emit } from \"./common/events\";\nimport { hexToJsDesignRGB } from \"./common/convertColor\";\nconst supportNodes = ['FRAME'];\nconst typeToName = {\n    'FRAME': \"画板\",\n    'GROUP': \"分组\",\n    'RECTANGLE': \"矩形\",\n    'ELLIPSE': \"椭圆\",\n    'LINE': \"线段\",\n    'POLYGON': \"多边形\",\n    'STAR': \"星形\",\n    'TEXT': \"文本\",\n    'SLICE': \"切片\",\n    'VECTOR': \"矢量\",\n    'BOOLEAN_OPERATION': \"布尔运算\",\n    'COMPONENT': \"引用\",\n    'INSTANCE': \"实例组件\",\n    'COMPONENT_SET': \"变体\"\n};\nconst dash = [2, 2];\nconst guideLinesGroupName = (name) => `${name}--分割线`;\nconst guideLineGroupName = (name) => `${name}--分割线`;\nconst storageKey = 'guideline-save-cards';\nlet basedColor = \"CCCCCC\";\nfunction hideFrameGuideLine(node, isHide) {\n    node.children && node.children.forEach(child_node => {\n        if (child_node.name.endsWith('--分割线')) {\n            child_node.visible = !isHide;\n        }\n        if (child_node.type === 'FRAME') {\n            hideFrameGuideLine(child_node, !isHide);\n        }\n    });\n}\nlet unApplyGroup = {};\nfunction clearCurrentUnApplyGroup() {\n    Object.keys(unApplyGroup).forEach(key => {\n        const node = unApplyGroup[key];\n        node === null || node === void 0 ? void 0 : node.remove();\n    });\n    unApplyGroup = {};\n}\nfunction drawLine(node, distance, isRow) {\n    const { width, height, rotation } = node;\n    const x = node.absoluteTransform[0][2];\n    const y = node.absoluteTransform[1][2];\n    const lineNode = figma.createLine();\n    const rgbColor = hexToJsDesignRGB(basedColor);\n    lineNode.x = isRow ? x : x + distance;\n    lineNode.y = isRow ? y + distance : y;\n    lineNode.resize(isRow ? width : height, 0);\n    lineNode.rotation = isRow ? 0 : -90;\n    lineNode.dashPattern = dash;\n    lineNode.strokes = [{ type: 'SOLID', color: rgbColor }];\n    lineNode.constraints = {\n        horizontal: \"SCALE\",\n        vertical: \"SCALE\"\n    };\n    lineNode.strokeWeight = 1;\n    return lineNode;\n}\nfunction createLine(node, guideline) {\n    let { width, height } = node;\n    let rows = guideline.row.scales;\n    let columns = guideline.column.scales;\n    let rowsLen = rows.length;\n    let columnsLen = columns.length;\n    let rowsPreSum = (() => {\n        let total = 0;\n        let sum = rows.map((row) => {\n            total += row;\n            return total;\n        });\n        return sum;\n    })();\n    let columnsPreSum = (() => {\n        let total = 0;\n        let sum = columns.map((column) => {\n            total += column;\n            return total;\n        });\n        return sum;\n    })();\n    let nodes = [];\n    rows.length > 1 && rows.forEach((_, index) => {\n        if (index === rows.length - 1) {\n            return;\n        }\n        let lineNode = drawLine(node, height * rowsPreSum[index] / rowsPreSum[rowsLen - 1], true);\n        nodes.push(lineNode);\n    });\n    columns.length > 1 && columns.forEach((_, index) => {\n        if (index === columns.length - 1) {\n            return;\n        }\n        let lineNode = drawLine(node, width * columnsPreSum[index] / columnsPreSum[columnsLen - 1], false);\n        nodes.push(lineNode);\n    });\n    return nodes;\n}\nfunction createGuidelineHandler(saveCard) {\n    const selections = figma.currentPage.selection;\n    selections.forEach(node => {\n        if (supportNodes.indexOf(node.type) !== -1) {\n            const nodes = createLine(node, saveCard.guideline);\n            if (nodes.length === 0) {\n                figma.notify('无效辅助线');\n                return;\n            }\n            let group = figma.group(nodes, node);\n            group.name = guideLineGroupName(saveCard.name);\n            group.locked = true;\n            const children = node.children;\n            let lineGroup = children.find(_node => _node.type === 'GROUP' && _node.name === guideLinesGroupName(node.name));\n            if (!lineGroup) {\n                lineGroup = figma.group([group], node);\n                lineGroup.name = guideLinesGroupName(node.name);\n                lineGroup.locked = true;\n            }\n            else {\n                lineGroup.appendChild(group);\n            }\n            unApplyGroup[saveCard === null || saveCard === void 0 ? void 0 : saveCard.id] = group;\n            figma.notify(`创建${saveCard.name}分割线成功`);\n        }\n        else {\n            figma.notify(`${typeToName[node.type]}节点 ${node.name} 暂时支持`);\n        }\n    });\n}\nfunction createGuideline(saveCard) {\n    if (unApplyGroup.hasOwnProperty(saveCard.id)) {\n        figma.notify(\"请勿重复添加分割线\");\n    }\n    else {\n        unApplyGroup[saveCard.id] = { remove: () => { console.log('删除成功'); } };\n        createGuidelineHandler(saveCard);\n    }\n}\nfunction deleteGuideline(saveCard) {\n    const id = saveCard.id;\n    if (!unApplyGroup.hasOwnProperty(id)) {\n        figma.notify(\"分割线不存在\");\n    }\n    else {\n        const node = unApplyGroup[id];\n        node === null || node === void 0 ? void 0 : node.remove();\n        delete unApplyGroup[id];\n        figma.notify(`取消${saveCard.name}分割线成功`);\n    }\n}\nfigma.showUI(__html__, { width: 260, height: 440 });\nemit('SELECTION_CHANGED', figma.currentPage.selection.length > 0);\nfigma.on('selectionchange', function () {\n    emit('SELECTION_CHANGED', figma.currentPage.selection.length > 0);\n    emit('clear-active');\n});\non(\"CHANGE_GUI_SIZE\", (guiSize) => {\n    figma.ui.resize(guiSize === null || guiSize === void 0 ? void 0 : guiSize.width, guiSize === null || guiSize === void 0 ? void 0 : guiSize.height);\n});\non('clear-line', () => {\n    clearCurrentUnApplyGroup();\n});\non('add-line', (saveCard) => {\n    createGuideline(saveCard);\n});\non('delete-line', (saveCard) => {\n    deleteGuideline(saveCard);\n});\non('apply-line', () => {\n    unApplyGroup = {};\n    emit('clear-active');\n    figma.notify(\"成功应用\");\n});\non('update-color', (color) => {\n    basedColor = color;\n});\non('preview-line', (guideline) => {\n    let saveCard = {\n        id: new Date().getTime().toString(),\n        name: '临时',\n        icon: '',\n        guideline\n    };\n    createGuideline(saveCard);\n});\non('hide-preview-line', () => {\n    clearCurrentUnApplyGroup();\n});\non('save-guideline', async (saveCard) => {\n    let saveCards = await figma.clientStorage.getAsync(storageKey);\n    if (saveCards === undefined) {\n        saveCards = [];\n    }\n    clearCurrentUnApplyGroup();\n    figma.clientStorage.setAsync(storageKey, [...saveCards, saveCard])\n        .then(() => {\n        figma.notify('保存成功');\n    }).catch(err => {\n        figma.notify('保存失败');\n        console.error(err);\n    });\n});\non('get-storage', () => {\n    figma.clientStorage.getAsync(storageKey).then((data) => {\n        emit('STORAGE', data);\n    });\n});\n","const namesRGB = ['r', 'g', 'b'];\n\nexport const webRGBToJsDesignRGB = (color) => {\n    const rgb = {};\n    namesRGB.forEach((e, i) => {\n        rgb[e] = color[i] / 255;\n    });\n    if (color[3] !== undefined) rgb['a'] = color[3];\n    return rgb;\n}\n\n// 十六进制转RGB\nexport const hexToJsDesignRGB = (color) => {\n    let opacity = '';\n    color = color.toLowerCase();\n    if (color[0] === '#') color = color.slice(1);\n\n    if (color.length === 3) {\n        color = color.replace(/(.)(.)(.)?/g, '$1$1$2$2$3$3');\n    } else if (color.length === 8) {\n        const arr = color.match(/(.{6})(.{2})/);\n        color = arr[1];\n        opacity = arr[2];\n    }\n    const num = parseInt(color, 16);\n    const rgb = [num >> 16, num >> 8 & 255, num & 255];\n\n    if (opacity) {\n        rgb.push(parseInt(opacity, 16) / 255);\n        return webRGBToJsDesignRGB(rgb);\n    } else {\n        return webRGBToJsDesignRGB(rgb);\n    }\n}","const eventHandlers = {};\nlet currentId = 0;\nexport function on(name, handler) {\n    const id = `${currentId}`;\n    currentId += 1;\n    eventHandlers[id] = { handler, name };\n    return function () {\n        delete eventHandlers[id];\n    };\n}\nexport function once(name, handler) {\n    let done = false;\n    return on(name, function (...args) {\n        if (done === true) {\n            return;\n        }\n        done = true;\n        handler(...args);\n    });\n}\nexport const emit = typeof window === 'undefined'\n    ? function (name, ...args) {\n        figma.ui.postMessage([name, ...args]);\n    }\n    : function (name, ...args) {\n        window.parent.postMessage({\n            pluginMessage: [name, ...args]\n        }, '*');\n    };\nfunction invokeEventHandler(name, args) {\n    for (const id in eventHandlers) {\n        if (eventHandlers[id].name === name) {\n            eventHandlers[id].handler.apply(null, args);\n        }\n    }\n}\nif (typeof window === 'undefined') {\n    figma.ui.onmessage = function ([name, ...args]) {\n        invokeEventHandler(name, args);\n    };\n}\nelse {\n    window.onmessage = function (event) {\n        const [name, ...args] = event.data.pluginMessage;\n        invokeEventHandler(name, args);\n    };\n}"],"sourceRoot":""}